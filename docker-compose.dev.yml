# Development Docker Compose configuration for Awade Frontend

services:
  # Frontend Development Only
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: awade-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
      - NODE_ENV=development
    stdin_open: true
    tty: true
    command: npm run dev -- --host 0.0.0.0

  # Optional: Backend for API calls
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: awade-backend-dev
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-awade_user}:${POSTGRES_PASSWORD:-awade_password}@postgres:5432/${POSTGRES_DB:-awade}
      - DEBUG=${DEBUG:-True}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages:/app/packages
    command: uvicorn apps.backend.main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: awade-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-awade}
      POSTGRES_USER: ${POSTGRES_USER:-awade_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-awade_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-awade_user} -d ${POSTGRES_DB:-awade}"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_dev: 